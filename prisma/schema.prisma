generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id                           Int               @id @default(autoincrement())
    email                        String            @unique
    created_at                   DateTime          @default(now())
    first_name                   String
    last_name                    String
    password                     String
    role                         Role              @default(USER)
    spreadsheets                 UserSpreadsheet[]
    avg_monthly_available_amount Int               @default(0)
}

model Spreadsheet {
    id              Int               @id @default(autoincrement())
    name            String
    description     String
    status          SpreadsheetStatus @default(OPEN)
    created_at      DateTime          @default(now())
    last_updated_at DateTime          @updatedAt
    categories      Category[]
    spreadsheets    UserSpreadsheet[]
}

model UserSpreadsheet {
    userId        Int
    spreadsheetId Int
    spreadsheet   Spreadsheet @relation(fields: [spreadsheetId], references: [id])
    user          User        @relation(fields: [userId], references: [id])

    @@id([userId, spreadsheetId])
}

model Category {
    id            Int           @id @default(autoincrement())
    spreadsheetId Int
    title         String
    description   String?
    current_date  DateTime
    created_at    DateTime      @default(now())
    spreadsheet   Spreadsheet   @relation(fields: [spreadsheetId], references: [id])
    subcategories SubCategory[]
}

model SubCategory {
    id              Int              @id @default(autoincrement())
    categoryId      Int
    title           String
    description     String?
    created_at      DateTime         @default(now())
    monthlyFinances MonthlyFinance[]
    category        Category         @relation(fields: [categoryId], references: [id])
}

model MonthlyFinance {
    id            Int           @id @default(autoincrement())
    subCategoryId Int
    month         DateTime
    created_at    DateTime      @default(now())
    subCategory   SubCategory   @relation(fields: [subCategoryId], references: [id])
    transactions  Transaction[]
}

model Transaction {
    id               Int            @id @default(autoincrement())
    monthlyFinanceId Int
    item_name        String?
    price            Float
    quantity         Int            @default(1)
    transaction_date DateTime
    monthlyFinance   MonthlyFinance @relation(fields: [monthlyFinanceId], references: [id])
}

enum Role {
    USER
    ADMIN
}

enum SpreadsheetStatus {
    OPEN
    CLOSED
}
